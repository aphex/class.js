(function(){var c=this,a=c._;!a&&"undefined"!==typeof require&&(a=require("underscore"));var j=c.Class,b;b="undefined"!==typeof exports?exports:c.Class={};b.VERSION="0.3";b.root=c;b.noConflict=function(){c.Class=j;return this};var g=function(){};a.extend(b,{definition:{},types:{String:a.isString,Number:a.isNumber,Boolean:a.isBoolean,Array:a.isArray,Function:a.isFunction,Object:a.isObject,Element:a.isElement,Regex:a.isRegExp},_extend:function(a){return b.define(this,a)},define:function(c,j){a.isFunction(c)||
(j=c,c=null);var m=j&&j.hasOwnProperty("constructor")?j.constructor:null,k=function(){if(!(this instanceof k))throw Error("Use new keyword to create a new instance or call/apply class with right scope");m?m.apply(this,arguments):c&&c.apply(this,arguments)};c&&(g.prototype=c.prototype,k.prototype=new g,k.constructor=k,k.prototype.__super__=c.prototype);k.prototype.$$error=b.error;for(var e in j)if("undefined"!==typeof this.definition[e])this.definition[e].call(this,k,j[e]);else throw Error("Unknown key in definition: "+
e+". Allowed keys are: "+a.keys(this.definition).join(", "));k.extend=this._extend;k.prototype.instanceOf=this._instanceOf;return k},error:function(a){throw a;},_instanceOf:function(a){return this instanceof a}})}).call(this);(function(){var c=this._,a=this.Class=this.Class||{};a.definition.namespace=a.namespace=function(a,b){if(c.isString(a))var g=b,b=a,a=g;b=b.split(".");g=this.root;if(0<b.length){for(var l=b.pop(),n=0,m=b.length;n<m;n++)var k=b[n],g=g[k]=g[k]||{};g[l]=a}return a}}).call(this);
(function(){var c=this.Class=this.Class||{};c.definition.singleton=c.singleton=function(a,c){c&&(a.$$instance=null,a.getInstance=function(){return this.$$instance||(this.$$instance=new this)})}}).call(this);(function(){var c=this._,a=this.Class=this.Class||{};a.definition.mixins=a.mixins=function(a,b){c.each(b,function(b){b=c.isFunction(b)?b.prototype:b;c.extend(a.prototype,b)})}}).call(this);
(function(){var c=this._,a=this.Class=this.Class||{};a.definition.interfaces=a.interfaces=function(a,b){c.each(b,function(b){var b=c.isFunction(b)?b.prototype:b,l;for(l in b)if(!a.prototype[l])throw Error('The Class does not implement the interface member "'+l+'"');})}}).call(this);(function(){var c=this._,a=this.Class=this.Class||{};a.definition.members=a.members=function(a,b){c.extend(a.prototype,b)}}).call(this);
(function(){var c=this._,a=this.Class=this.Class||{};a.definition.statics=a.statics=function(a,b){c.extend(a,b)}}).call(this);
(function(){var c=this._,a=this.Class=this.Class||{};a.definition.properties=a.properties=function(a,e){for(var p in e){var f=a,h=p,i=e[p];c.isObject(i)||(i={type:i});var d=b(h,i,"set"),o=b(h,i,"get");f.prototype[d]=l(h,i,o,d);f.prototype[o]=g(h,i,o,d);if("Boolean"===i.type){var q=b(h,i,"is");f.prototype[q]=n(h,i,o,d)}}a.prototype.set=j("set");a.prototype._set=j("_set")};var j=function(a){return function(e,b,f){if(c.isString(e)){var h=e,e={};e[h]=b}else f=f||b;for(h in e)if(b=h.charAt(0).toUpperCase()+
h.substring(1),b=a+b,this[b])this[b](e[h],f);else throw Error('No public set method for property "'+h+'" found.');return this}},b=function(a,b,c){a=a.charAt(0).toUpperCase()+a.substring(1);name=c+a;if(!1===b["is"===c?"get":c])name="_"+name;return name},g=function(a,b,c,f){return function(){this.$$properties=this.$$properties||{};if("undefined"!==typeof b.init){var c=b.init;delete b.init;this[f](c)}return this.$$properties[a]}},l=function(b,e,j){return function(f,h){var h=!1===h?!1:!0,i=this[j]();
if(e.format){var d=c.isString(e.format)?this[e.format]:e.format;if(d)f=d.call(this,f,i,b);else throw Error('Format method "'+e.format+'" for property "'+b+'" not available.');}d=e.type;if(!(c.isNull(f)&&!0===e.nullable)&&d){var g=c.isFunction(d)?this.instanceOf:a.types[d];if(g){if(!g.call(this,f)){g='Wrong type for property "'+b+'". Expected value "'+f+'" to be of type "'+d+'" but found: '+typeof f;g+=". Allowed keys are: "+c.keys(a.types).join(", ");d=new a.TypeError(g,b,f,d);this.$$error.call(this,
d);return}}else throw Error('Unknown type "'+d+'" for property "'+b+'".');}if(d=e.validate)c.isArray(d)||(d=[d]),c.each(d,function(d){if(d=c.isString(d)?this[d]:d){var d=d.call(this,f,i,b),g=c.isString(d);if(!d||g)this.$$error.call(this,new a.ValidationError(g?d:'Validation for property "'+b+'" with value "'+f+'" failed',b,f))}else throw Error('Validation method "'+e.validate+'" for property "'+b+'" not available.');},this);this.$$properties[b]=f;if(e.hasOwnProperty("apply"))if(d=c.isString(e.apply)?
this[e.apply]:e.apply)d.call(this,f,i,b);else throw Error('Apply method "'+e.apply+'" for property "'+b+'" not available.');if(e.event&&h)if(d=this.trigger||this.emit)d.call(this,e.event,{target:this,value:f,old:i,property:b});else throw Error("Object does not support events");return f}},n=function(a,b,c){return function(){return this[c]()}},m=a.ValidationError=a.define(Error,{constructor:function(a,b,c){this.name="ValidationError";this.message=a||"Validation Error";this.property=b;this.value=c}});
a.TypeError=m.extend({constructor:function(a,b,c,f){m.apply(this,arguments);this.name="TypeError";this.message=a||"Type Error";this.type=f}})}).call(this);